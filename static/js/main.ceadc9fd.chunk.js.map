{"version":3,"sources":["styles/global.js","pages/Main/styles.js","components/Movies/styles.js","components/Movie/styles.js","services/api.js","services/movieService.js","components/Img/styles.js","components/Img/index.js","components/Movie/index.js","components/Pagination/styles.js","components/Pagination/index.js","components/Movies/index.js","pages/Main/index.js","components/Header/styles.js","components/Header/index.js","components/Footer/styles.js","components/Footer/index.js","pages/Movie/styles.js","pages/Movie/index.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","Container","styled","div","api","axios","create","baseURL","interceptors","request","use","config","url","error","Promise","reject","MovieService","getPopular","a","page","get","params","then","res","data","getTopRated","getUpcoming","getMovieDetail","id","getMovieRecommendation","getMovieCast","getMovieImages","getSearch","name","query","generateImageUrl","imageUrl","size","props","width","height","minWidth","image","rating","Img","useState","setWidth","setHeight","setRating","setImage","caption","setCaption","useEffect","undefined","className","Movie","movie","setMovie","style","textDecoration","to","vote_average","poster_path","title","genre_ids","map","item","index","comma","length","key","Pagination","currentPage","setCurrentPage","endPage","setEndPage","Page","active","onClick","e","onPage","preventDefault","items","push","updatePagination","Movies","movies","setMovies","searchMovies","text","filter","Main","setFilter","searchText","total_pages","results","Header","color","type","Footer","href","cast","setCast","images","setImages","useParams","formatter","Intl","NumberFormat","currency","backdrops","overview","release_date","format","budget","revenue","runtime","profile_path","generateCast","file_path","generateImages","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ceadc9fd.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    \r\n    html, body, #root {\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: #141414;\r\n\r\n        .container {\r\n            padding-right: 15px;\r\n            padding-left: 15px;\r\n            margin-right: auto;\r\n            margin-left: auto;\r\n        }\r\n        @media (min-width: 576px) {\r\n            .container {\r\n                max-width: 540px;\r\n            }\r\n        }\r\n\r\n        @media (min-width: 768px) {\r\n            .container {\r\n                max-width: 720px;\r\n            }\r\n        }\r\n\r\n        @media (min-width: 992px) {\r\n            .container {\r\n                max-width: 960px;\r\n            }\r\n        }\r\n\r\n        @media (min-width: 1200px) {\r\n            .container {\r\n                max-width: 1140px;\r\n            }\r\n        }\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    .filters {\r\n        margin-top: 20px;\r\n        display: flex;\r\n        justify-content: center;\r\n        .filter {\r\n            color: white;\r\n            cursor: pointer;\r\n            user-select: none;\r\n            border: 1px solid #fff;\r\n            border-radius: 4px;\r\n            padding: 6px 15px;\r\n            &.active {\r\n                color: black;\r\n                background-color: white;\r\n            }\r\n        }\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    .content {\r\n        margin-top: 20px;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n        grid-gap: 2rem;\r\n        grid-auto-flow: dense;\r\n    }\r\n    .pagination {\r\n        width: 100%;\r\n        margin-top: 50px;\r\n    }\r\n    @media(max-width: 600px) {\r\n        grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    position: relative;\r\n    transition: opacity .3s ease-in-out;\r\n    cursor: pointer;\r\n    .title {\r\n        margin-top: 10px;\r\n        display: block;\r\n        text-decoration: none;\r\n        font-size: 1.3rem;\r\n        font-weight: 500;\r\n        line-height: 18px;\r\n        color: white;\r\n        overflow-wrap: break-word;\r\n    }\r\n    .genres {\r\n        margin-top: 5px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        color: #aaa;\r\n        font-size: .6rem;\r\n        .genre {\r\n            margin-right: 5px;\r\n        }\r\n    }\r\n    :hover {\r\n        opacity: 0.7;\r\n    }\r\n`;","import axios from 'axios';\r\n\r\nconst API_KEY = 'd8b813dafae4ea935257dba6cb1eae38';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({\r\n    baseURL: BASE_URL\r\n});\r\n\r\napi.interceptors.request.use(function (config) {\r\n    // add key before reques is sent.\r\n    if (config.url) {\r\n        config.url += `?api_key=${API_KEY}`\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    return Promise.reject(error);\r\n});\r\nexport default api;","import api from './api';\r\n\r\nconst MovieService = {\r\n    getPopular: async (page = 1) => {\r\n        return await api.get('/movie/popular', {\r\n            params: {\r\n                page: page\r\n            }\r\n        }).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getTopRated: async (page = 1) => {\r\n        return await api.get('/movie/top_rated', {\r\n            params: {\r\n                page: page\r\n            }\r\n        }).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getUpcoming: async (page = 1) => {\r\n        return await api.get('/movie/upcoming', {\r\n            params: {\r\n                page: page\r\n            }\r\n        }).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getMovieDetail: async(id) => {\r\n        return await api.get(`/movie/${id}`).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getMovieRecommendation: async(id) => {\r\n        return await api.get(`/movie/${id}/recommendations`).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getMovieCast: async(id) => {\r\n        return await api.get(`/movie/${id}/credits`).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getMovieImages: async(id) => {\r\n        return await api.get(`/movie/${id}/images`).then( res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    getSearch: async(name, page) => {\r\n        return await api.get(`/search/movie`, {params: {\r\n            query: name,\r\n            page: page\r\n        }}).then(res => {\r\n            return res.data;\r\n        });\r\n    },\r\n    generateImageUrl: (imageUrl, size=185) => {\r\n        switch(size) {\r\n            case 185: {\r\n                return 'https://image.tmdb.org/t/p/w185' + imageUrl;\r\n            }\r\n            case 300: {\r\n                return 'https://image.tmdb.org/t/p/w300' + imageUrl;\r\n            }\r\n            default: {\r\n                return 'https://image.tmdb.org/t/p/original' + imageUrl;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport default MovieService;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    .image {\r\n        display: block;\r\n        width: ${ props => props.width || 'auto'};\r\n        height: ${ props => props.height || 'auto'};\r\n        min-width: ${ props => props.minWidth || 'auto'};\r\n        background-size: 100% 100%;\r\n        background-repeat: no-repeat;\r\n        background-image: url(${props => props.image});\r\n    }\r\n    .rating {\r\n        border-radius: 2px;\r\n        position: absolute;\r\n        left: -5px;\r\n        color: white;\r\n        width: 32px;\r\n        height: 18px;\r\n        text-align: center;\r\n        font-size: 11px;\r\n        background-color: ${props => \r\n            props.rating >= 7 ? '#3bb33b' : \r\n            props.rating <= 3 ? 'red' : '#aaa'};\r\n        line-height: 18px;\r\n    }\r\n    .caption {\r\n        font-size: 13px;\r\n        font-weight: 600;\r\n        margin-bottom: 5px;\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Img = (props) => {\r\n    const [width, setWidth] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [rating, setRating] = useState();\r\n    const [image, setImage] = useState();\r\n    const [caption, setCaption] = useState();\r\n\r\n    useEffect( () => {\r\n        setHeight(props.height);\r\n        setWidth(props.width);\r\n        setRating(props.rating);\r\n        setImage(props.image);\r\n        setCaption(props.caption);\r\n\r\n    }, [props.width, props.height, props.rating, props.image, props.caption]);\r\n\r\n    return <Container width={width} height={height} rating={rating} image={image} caption={caption}>\r\n        { rating !== undefined &&\r\n            <div className=\"rating\">\r\n                {rating}\r\n            </div>\r\n        }\r\n        <div className=\"image\">\r\n        </div>\r\n        { caption !== undefined &&\r\n            <div className=\"caption\">\r\n                {caption}\r\n            </div>\r\n        }\r\n    </Container>\r\n}\r\n\r\nexport default Img;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\nimport MovieService from '../../services/movieService';\r\n\r\nimport Img from '../Img';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Movie = (props) => {\r\n    const [movie, setMovie] = useState(props.movie);\r\n    useEffect( () => {\r\n        if(props.movie) {\r\n            setMovie(props.movie);\r\n        }\r\n    },[props.movie, movie]);\r\n\r\n    return <Link style={{ textDecoration: 'none'}} to={'/movie/' + movie.id}><Container>\r\n        <Img \r\n            height={'275px'}\r\n            rating={movie.vote_average} \r\n            image={MovieService.generateImageUrl(movie.poster_path)}/>\r\n        <div className=\"title\">\r\n            {movie.title}\r\n        </div>\r\n        <div className=\"genres\">\r\n            { movie.genre_ids.map( (item, index) => {\r\n                const comma = index !== movie.genre_ids.length - 1; \r\n                return <div key={index} className=\"genre\">{item}{comma ? ',' : ''}</div>\r\n            })}\r\n        </div>\r\n    </Container>\r\n    </Link>\r\n}\r\n\r\nexport default Movie;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    .page {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-self: center;\r\n        width: 32px;\r\n        height: 32px;\r\n        margin: 0 10px;\r\n        border-radius: 50%;\r\n        color: #aaa;\r\n        text-decoration: none;\r\n        text-align: center;\r\n        line-height: 30px;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n        user-select: none;\r\n        &.active {\r\n            background-color: #3bb33b;\r\n            color: white;\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Pagination = (props) => {\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n\r\n    const Page = (id) => {\r\n        const active = (id === currentPage);\r\n        return <div key={id} className={'page' + (active ? ' active' : '')} onClick={(e) => onPage(e, id)}>\r\n            {id === endPage && endPage > 0 ? endPage : id + 1}\r\n        </div>\r\n    } \r\n    const updatePagination = () => {\r\n        let items = [];\r\n        \r\n        items.push(Page(0));\r\n\r\n        if(currentPage - 2 > 0) {\r\n            items.push(Page(currentPage - 2));\r\n        }\r\n        if(currentPage - 1 > 0) {\r\n            items.push(Page(currentPage - 1));\r\n        }\r\n        if(currentPage  > 0) {\r\n            items.push(Page(currentPage));\r\n        }\r\n        if(currentPage + 1  < endPage) {\r\n            items.push(Page(currentPage + 1));\r\n        }\r\n        if(currentPage + 2  < endPage) {\r\n            items.push(Page(currentPage + 2));\r\n        }\r\n        if(currentPage + 3  < endPage) {\r\n            items.push(Page(endPage - 1));\r\n        }\r\n        return items;\r\n    }\r\n    useEffect( () => {\r\n        setCurrentPage(props.currentPage);\r\n        setEndPage(props.endPage);\r\n    }, [props.currentPage, props.endPage]);\r\n    const onPage = (e, id) => {\r\n        e.preventDefault();\r\n        setCurrentPage(id);\r\n        if(props.onPage) {\r\n            props.onPage(id);\r\n        }\r\n    };\r\n    return <Container>\r\n        {updatePagination()}\r\n    </Container>\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container } from './styles';\r\nimport Movie from '../Movie';\r\nimport Pagination from '../Pagination';\r\n\r\nconst Movies = (props) => {\r\n    const [movies, setMovies] = useState(props.movies);\r\n    const [currentPage, setCurrentPage] = useState();\r\n    const [endPage, setEndPage] = useState();\r\n\r\n    useEffect( () => {\r\n        setMovies(props.movies);\r\n        setCurrentPage(props.currentPage);\r\n        setEndPage(props.endPage);\r\n    }, [props.movies, props.currentPage, props.endPage]);\r\n    const onPage = (id) => {\r\n        if(props.onPage) {\r\n            props.onPage(id);\r\n        }\r\n    }\r\n    return <Container>\r\n        <div className=\"content\">\r\n            { movies && movies.map( (item, index) => {\r\n                return <Movie key={index} movie={item}/>\r\n            })}\r\n        </div>\r\n        { endPage > 0 &&\r\n        <div className=\"pagination\">\r\n            <Pagination currentPage={currentPage} endPage={endPage} onPage={onPage}/>\r\n        </div>\r\n        }\r\n    </Container>\r\n}\r\n\r\nexport default Movies;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {Container} from './styles';\r\n\r\nimport Movies from '../../components/Movies';\r\nimport MovieService from '../../services/movieService';\r\n\r\nconst searchMovies = (text, filter, page) => {\r\n    if(text && text.length > 0) {\r\n        return MovieService.getSearch(text, page);\r\n    }\r\n    switch(filter) {\r\n        case 0: {\r\n            return MovieService.getPopular(page);\r\n        }\r\n        case 1: {\r\n            return MovieService.getTopRated(page);\r\n        }\r\n        case 2: {\r\n            return MovieService.getUpcoming(page);\r\n        }\r\n    }\r\n};\r\n\r\nconst Main = (props) => {\r\n    const filters = [\r\n        'Popular',\r\n        'Top Rated',\r\n        'Upcoming'\r\n    ];\r\n    const [filter,setFilter] = useState(0);\r\n    const [movies, setMovies] = useState();\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [endPage, setEndPage] = useState(0);\r\n    const [searchText, setSearchText] = useState();\r\n\r\n    const onClick = (e, id) => {\r\n        e.preventDefault();\r\n        setFilter(id);\r\n        setCurrentPage(0);\r\n        searchMovies(searchText, id, 1).then(data => {\r\n            setEndPage(data.total_pages);\r\n            setMovies(data.results);\r\n        });\r\n    }\r\n    useEffect( () => {\r\n        searchMovies(searchText, filter, currentPage + 1).then(data => {\r\n            setEndPage(data.total_pages);\r\n            setMovies(data.results);\r\n        });\r\n    }, []);\r\n\r\n    const onPage = (id) => {\r\n        setCurrentPage(id);\r\n        searchMovies(searchText, filter, id + 1).then(data => {\r\n            setMovies(data.results);\r\n        });\r\n    };\r\n    return <Container className=\"container\">\r\n        <div className=\"filters\">\r\n            {filters.map( (item, index) => {\r\n                const active = filter === index;\r\n                return <div key={index} className={'filter' + (active ? ' active' : '')} onClick={(e) => onClick(e, index)}>\r\n                    {item}\r\n                </div>\r\n            })}\r\n        </div>\r\n        <Movies movies={movies} currentPage={currentPage} endPage={endPage} onPage={onPage}/>\r\n    </Container>\r\n}\r\nexport default Main;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 70px;\r\n    background-color: #1f1f1f;\r\n\r\n    .container {\r\n        display: grid;\r\n        height: 100%;\r\n        grid-template-columns: 1fr 3fr 1fr;\r\n    }\r\n    .searchbar, .user {\r\n        align-self: center;\r\n        justify-self: center;\r\n    }\r\n    .logo {\r\n        font-size: 2rem;\r\n        border-radius: 5px;\r\n        color: #fff;\r\n        text-transform: uppercase;\r\n        letter-spacing: 4px;\r\n        font-weight: 700;\r\n        align-self: center;\r\n    }\r\n    .searchbar {\r\n        width: 100%;\r\n        .field {\r\n            width: calc(100% - 60px);\r\n            height: 40px;\r\n            border: solid 2px grey;\r\n            padding-left: 10px;\r\n            padding-right: 25px;\r\n            border-radius: 10px;\r\n            font-size: 15px;\r\n            outline:none\r\n        }\r\n        i {\r\n            position: relative;\r\n            left: -25px;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    .user {\r\n        justify-self: flex-end;\r\n    }\r\n`;","import React, { useState } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return <Container>\r\n        <div className=\"container\">\r\n            <div className=\"logo\">\r\n                <Link style={{ textDecoration: 'none', color: 'inherit'}} to=\"/\" >\r\n                    Buvie\r\n                </Link>\r\n            </div>\r\n            <div className=\"searchbar\">\r\n                <input type=\"text\" className=\"field\" />\r\n                <i className=\"fas fa-search\"></i>\r\n            </div>\r\n            <div className=\"user\">\r\n                <i className=\"fas fa-user\"></i>\r\n            </div>\r\n        </div>\r\n    </Container>\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 70px;\r\n    background-color: #1f1f1f;\r\n    margin-top: 50px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .copyright {\r\n        color: #aaa;\r\n        font-size: 1.1rem;\r\n        cursor: pointer;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n`;","import React, { useState } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return <Container>\r\n        <div className=\"container\">\r\n            <a href=\"https://github.com/Bufige\">\r\n                <div className=\"copyright\">\r\n                    ©2020 Copyright Leonardo Igor\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </Container>\r\n}\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    color: white;\r\n    .movie {\r\n        width: 100%;\r\n        display: flex;\r\n        margin-top: 25px;\r\n        span {\r\n            display: block;\r\n            margin-bottom: 5px;\r\n            font-size: 12px;\r\n            font-weight: 500;\r\n        }\r\n        .movie-image {\r\n            width: 320px;\r\n            min-width: 320px;\r\n            height: 480px;\r\n        }\r\n        .content {\r\n            width: 100%;\r\n            padding-left: 30px;\r\n            * {\r\n                margin-top: 15px;\r\n            }\r\n            .title {\r\n                font-size: 2rem;\r\n            }\r\n            .overview {\r\n\r\n            }\r\n            .release-date {\r\n\r\n            }\r\n            .budget {\r\n\r\n            }\r\n            .revenue {\r\n\r\n            }\r\n            .duration {\r\n\r\n            }\r\n            .cast {\r\n                .cast-images {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fill, minmax(115px, 1fr));\r\n                    grid-gap: 2rem;\r\n                    grid-auto-flow: dense;\r\n                }\r\n            }\r\n            .images{\r\n                margin-top: 10px;\r\n                display: grid;\r\n                grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\r\n                grid-gap: 1rem;\r\n                grid-auto-flow: dense;\r\n            }\r\n        }\r\n    }\r\n\r\n    .recommended {\r\n        .text {\r\n            font-size: 2.5rem;\r\n        }\r\n        .recomendations {\r\n            \r\n        }\r\n    }\r\n    @media(max-width: 900px) {\r\n        .movie {\r\n            display: block;\r\n            .movie-image {\r\n                width: 100%;\r\n                height: 475px;\r\n            }\r\n            .content {\r\n                padding-left: 0px;\r\n                \r\n                .cast-images {\r\n                    grid-template-columns: repeat(auto-fill, minmax(45%, 1fr));\r\n                }\r\n                .images {\r\n                    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { useParams} from \"react-router\";\r\n\r\nimport { Container } from './styles';\r\n\r\nimport MovieService from '../../services/movieService';\r\nimport Movies from '../../components/Movies';\r\nimport Img from '../../components/Img';\r\n\r\nconst generateCast = (cast) => {\r\n    return cast.map( (item, index) => {\r\n        return <Img\r\n            key={index}\r\n            width={'115px !important'}\r\n            height={'160px'}\r\n            caption={item.name}\r\n            image={MovieService.generateImageUrl(item.profile_path, 185)}\r\n        />\r\n    });\r\n};\r\nconst generateImages = (images) => {\r\n    return images.map( (item, index) => {\r\n        return <Img\r\n            key={index}\r\n            width={'185px !important'}\r\n            height={'105px'}\r\n            caption={item.name}\r\n            image={MovieService.generateImageUrl(item.file_path, 185)}\r\n        />\r\n    });\r\n};\r\nconst Movie = (props) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [movie, setMovie] = useState();\r\n    const [cast, setCast] = useState([]);\r\n    const [images, setImages] = useState([]);\r\n\r\n    let { id } = useParams();\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n    });\r\n      \r\n    useEffect( () => {\r\n        MovieService.getMovieRecommendation(id).then(data => {\r\n            setMovies(data.results);\r\n        });\r\n        MovieService.getMovieDetail(id).then(data => {\r\n            setMovie(data);\r\n        });\r\n        MovieService.getMovieCast(id).then(data => {\r\n            setCast(data.cast);\r\n        });\r\n        MovieService.getMovieImages(id).then(data => {\r\n            setImages(data.backdrops);\r\n        });\r\n\r\n    }, [id]);\r\n    return <>{ movie && <Container className=\"container\">\r\n        <div className=\"movie\">\r\n            \r\n            <div className=\"movie-image\">\r\n            <Img \r\n            width={'100%'}\r\n            height={'100%'}\r\n            rating={movie.vote_average} \r\n            image={MovieService.generateImageUrl(movie.poster_path, 500)}/>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    {movie.title}\r\n                </div>\r\n                <div className=\"overview\">\r\n                    {movie.overview}\r\n                </div>\r\n                <div className=\"release-date\">\r\n                    <span>Release date</span>\r\n                    {movie.release_date}\r\n                </div>\r\n                <div className=\"budget\">\r\n                    <span>Budget</span>\r\n                    {formatter.format(movie.budget)}\r\n                </div>\r\n                <div className=\"revenue\">\r\n                    <span>Revenue</span>\r\n                    {formatter.format(movie.revenue)}\r\n                </div>\r\n                <div className=\"duration\">\r\n                    <span>Duration</span>\r\n                    {movie.runtime}\r\n                </div>\r\n                <div className=\"cast\">\r\n                    <span>Cast</span>\r\n                    <div className=\"cast-images\">\r\n                        { generateCast(cast) }\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <span>Images</span>\r\n                    <div className=\"images\">\r\n                        { generateImages(images) }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"recommended\">\r\n            <div className=\"text\">\r\n                Recommended\r\n            </div>\r\n            {   \r\n                movies.length > 0 ? <Movies movies={movies}/> : <h1>No movies</h1>\r\n            }\r\n        </div>\r\n    </Container>\r\n    }\r\n    </>\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\n\nimport GlobalStyle from './styles/global';\n\nimport Main from './pages/Main';\nimport Header from './components/Header';\n\nimport Footer from './components/Footer';\n\nimport Movie from './pages/Movie';\n\nconst App = () => {\n    return <Router>\n        <GlobalStyle/>\n        <Header/>\n        <Switch>\n            <Route path=\"/movie/:id\" component={Movie} />\n            <Route path=\"/\" component={Main} />\n        </Switch>\n        <Footer/>\n    </Router>\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}